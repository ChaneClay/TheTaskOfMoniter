<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  	xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
  	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
  	http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" 
  	id="WebApp_ID" version="3.1">
  	
  	<!-- 编码过滤器 -->
 <filter>
  <filter-name>encoding</filter-name>
  <filter-class>
       org.springframework.web.filter.CharacterEncodingFilter
  </filter-class>
  <init-param>
   <param-name>encoding</param-name>
   <param-value>UTF-8</param-value>
  </init-param>
 </filter>  
 
 <filter-mapping>
  <filter-name>encoding</filter-name>
  <url-pattern>/*</url-pattern>
 </filter-mapping>
 
 
   <!-- 需要监控服务器的内存和cpu的使用情况，使用Sigar来获取服务器的基础数据，依赖的sigar包 -->
   <!-- 遵循Controller–Service接口–ServiceImpt实现类–Mapper接口模式 -->
   <!-- 配置加载Spring文件的监听器-->
 <context-param>
  <param-name>contextConfigLocation</param-name>
  <param-value>classpath:applicationContext.xml</param-value>
 </context-param>
 <listener>
  <listener-class>
       org.springframework.web.context.ContextLoaderListener
  </listener-class>
 </listener>
 <!-- 配置Spring MVC前端核心控制器 -->
 <!-- DispatcherServlet是前端控制器设计模式的实现，提供Spring Web MVC的集中访问点，而且负责职责的分派，
 而且与Spring IoC容器无缝集成，从而可以获得Spring的所有好处。 -->
 <servlet>
  <servlet-name>springmvc</servlet-name>
  <servlet-class>
       org.springframework.web.servlet.DispatcherServlet
  </servlet-class>
  <!-- 初始化参数 -->
  <init-param>
   <param-name>contextConfigLocation</param-name>
   <param-value>classpath:springmvc-config.xml</param-value>
  </init-param>
  <!-- 配置服务器启动后立即加载Spring MVC配置文件 -->
     <load-on-startup>1</load-on-startup>
 </servlet>
 
 <servlet-mapping>
  <servlet-name>springmvc</servlet-name>
  <!-- emmm  .jsp文件不拦截，我就说怎么老是404 -->
  <!--/:拦截所有请求（除了jsp）-->
  <!-- url-pattern：表示哪些请求交给Spring Web MVC处理， “/” 是用来定义默认servlet映射的。
  也可以如“*.html”表示拦截所有以html为扩展名的请求。 -->
  <url-pattern>/</url-pattern>
 </servlet-mapping>
  
  
  
  
   <!-- 配置静态资源 -->
	<!--防止静态资源被拦截-->
	<servlet-mapping>
	
		<servlet-name>default</servlet-name>
		<url-pattern>/static/*</url-pattern>
	</servlet-mapping>
	

  
	
  
  
  
  
</web-app>